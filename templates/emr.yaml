AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates an EMR cluster for Etleap"

Parameters:
  EtleapEMRInstanceProfile:
    Type: String
  EtleapEMRDefaultRole:
    Type: String
  EtleapEMRAutoscalingDefaultRole:
    Type: String
  EtleapEMRSubnetId:
    Type: String
  EtleapInternalSecurityGroup:
    Type: String
  QSS3BucketName:
    Type: String
  QSS3BucketRegion:
    Type: String
  QSS3KeyPrefix:
    Type: String

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, "aws-quickstart"]

Resources:
  EtleapEMR:
    Type: "AWS::EMR::Cluster"
    Properties:
      Name: "Etleap EMR"
      ReleaseLabel: "emr-5.20.0"
      VisibleToAllUsers: true
      Applications:
      - Name: Hadoop
      - Name: Spark
      AutoScalingRole: !Ref EtleapEMRAutoscalingDefaultRole
      Configurations:
      - Classification: "hadoop-env"
        Configurations: 
          - Classification: export
            ConfigurationProperties:
              HADOOP_USER_CLASSPATH_FIRST: "true"
      - Classification: "yarn-site"
        ConfigurationProperties:
          yarn.resourcemanager.scheduler.class: "org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler"
          yarn.scheduler.fair.preemption: "true"
          yarn.log-aggregation-enable: "true"
          yarn.log-aggregation.retain-seconds: "7200"
          yarn.nodemanager.remote-app-log-dir: "/log"
          yarn.node-labels.am.default-node-label-expression: "CORE_OR_TASK"
          yarn.nodemanager.node-labels.provider: "config"
          yarn.nodemanager.node-labels.provider.configured-node-partition: "CORE_OR_TASK"
      - Classification: "capacity-scheduler"
        ConfigurationProperties:
          yarn.scheduler.capacity.root.accessible-node-labels.CORE.capacity: "0"
          yarn.scheduler.capacity.root.accessible-node-labels.CORE_OR_TASK.capacity: "100"
          yarn.scheduler.capacity.root.default.accessible-node-labels.CORE.capacity: "0"
          yarn.scheduler.capacity.root.default.accessible-node-labels.CORE_OR_TASK.capacity: "100"
      - Classification: "mapred-site"
        ConfigurationProperties:
          mapreduce.job.counters.limit: "512"
          mapreduce.client.submit.file.replication: "2"
      - Classification: "emrfs-site"
        ConfigurationProperties: 
          fs.s3.enableServerSideEncryption: "true"
      - Classification: "spark-defaults"
        ConfigurationProperties:
          spark.history.fs.cleaner.enabled: "true"
          spark.history.fs.cleaner.interval: "1h"
          spark.history.fs.cleaner.maxAge: "3h"
      JobFlowRole: !Ref EtleapEMRInstanceProfile
      ServiceRole: !Ref EtleapEMRDefaultRole
      Instances:
        CoreInstanceGroup:
          EbsConfiguration:
            EbsBlockDeviceConfigs:
              - VolumeSpecification:
                  SizeInGB: 512
                  VolumeType: gp2
                VolumesPerInstance: 1
          InstanceCount: 1
          Market: ON_DEMAND
          InstanceType: c5.xlarge
          Name: "CORE"
        MasterInstanceGroup:
          EbsConfiguration:
            EbsBlockDeviceConfigs:
              - VolumeSpecification:
                  SizeInGB: 128
                  VolumeType: gp2
                VolumesPerInstance: 1
          InstanceCount: 1
          Market: ON_DEMAND
          InstanceType: m5.xlarge
          Name: "MASTER"
        Ec2SubnetId: !Ref EtleapEMRSubnetId
        AdditionalMasterSecurityGroups:
        - Ref: EtleapInternalSecurityGroup
        AdditionalSlaveSecurityGroups:
        - Ref: EtleapInternalSecurityGroup
      Steps:
      - ActionOnFailure: CANCEL_AND_WAIT
        Name: "Initalize HDFS"
        HadoopJarStep:
          Args: 
          - bash
          - /hdfs-init.sh
          Jar: "command-runner.jar"
      BootstrapActions:
      - Name: "Configure Fair Scheduler"
        ScriptBootstrapAction: 
          Path: 
            !Sub
              - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/download-fair-scheduler-config.sh
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      - Name: "Add Etleap-provided JARs"
        ScriptBootstrapAction:
          Path: 
            !Sub
              - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/add-app-provided-libs.sh
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      - Name: "Replace the Java keystore with Etleap's"
        ScriptBootstrapAction:
          Path: 
            !Sub
              - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/install-etleap-keystore.sh
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      - Name: "Set TCP keepalive"
        ScriptBootstrapAction:
          Path:
            !Sub
              - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/set-tcp-keepalive.sh
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      - Name: "Copy HDFS init script"
        ScriptBootstrapAction:
          Path: 
            !Sub
              - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/copy-hdfs-init.sh
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
  
  EMRTask:
    Type: "AWS::EMR::InstanceGroupConfig"
    Properties:
      EbsConfiguration:
        EbsBlockDeviceConfigs:
        - VolumeSpecification:
            SizeInGB: 64
            VolumeType: gp2
          VolumesPerInstance: 1
      InstanceCount: 1
      Market: SPOT
      BidPrice: "0.21"
      InstanceRole: TASK
      InstanceType: c5.xlarge
      JobFlowId: !Ref EtleapEMR
      Name: "TASK SPOT"
      AutoScalingPolicy:
        Constraints:
          MaxCapacity: 100
          MinCapacity: 1
        Rules:
        - Action: 
            SimpleScalingPolicyConfiguration:
              AdjustmentType: CHANGE_IN_CAPACITY
              ScalingAdjustment: 1
              CoolDown: 300
          Name: ScaleOutOnContainersPendingRatio
          Description: "Scale out if ContainerPendingRatio is more than 1"
          Trigger:
            CloudWatchAlarmDefinition:
              ComparisonOperator: GREATER_THAN
              EvaluationPeriods: 1
              MetricName: ContainerPendingRation
              Namespace: "AWS/ElasticMapReduce"
              Period: 300
              Statistic: AVERAGE
              Threshold: 1.0
              Unit: COUNT
        - Action: 
            SimpleScalingPolicyConfiguration:
              AdjustmentType: CHANGE_IN_CAPACITY
              ScalingAdjustment: -1
              CoolDown: 300
          Name: ScaleInOnContainersPendingRatio
          Description: "Scale in if ContainerPendingRatio is more than 0.5"
          Trigger:
            CloudWatchAlarmDefinition:
              ComparisonOperator: LESS_THAN
              EvaluationPeriods: 1
              MetricName: ContainerPendingRation
              Namespace: "AWS/ElasticMapReduce"
              Period: 300
              Statistic: AVERAGE
              Threshold: 0.5
              Unit: COUNT

Outputs:
  EMRHostname:
    Value: !GetAtt EtleapEMR.MasterPublicDNS