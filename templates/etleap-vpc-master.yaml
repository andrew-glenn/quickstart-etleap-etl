AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates an Etleap deployment inside a VPC"

Parameters: 
  DeploymentId:
    Type: String
  UserSpecifiedDeploymentSecret:
    Type: String
  VpcCidrBlock1:
    Type: Number
    Default: 0
  VpcCidrBlock2:
    Type: Number
    Default: 0
  FirstName:
    Type: String
  LastName:
    Type: String
  Email:
    Type: String
  SetupPassword:
    Type: String
  DeploymentOption:
    Type: String
  MarketplacePurchase:
    Type: String
  UserSpecifiedVPCId:
    Type: String
    Default: ""
  PublicSubnetA:
    Type: String
    Default: ""
  PublicSubnetB:
    Type: String
    Default: ""
  PrivateSubnetA:
    Type: String
    Default: ""
  PrivateSubnetB:
    Type: String
    Default: ""
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
  AllowedIPCidr:
    Type: String
  QSS3BucketName:
    Type: String
  QSS3BucketRegion:
    Type: String
  QSS3KeyPrefix:
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      app: ami-046ce6172c7e24849
      mpapp: ami-039c1ccd1b77386ad
      nat: ami-00a9d4a05375b2763
    us-east-2:
      app: ami-0194773bd7104417a
      mpapp: ami-025efaa4b727d0607
      nat: ami-00d1f8201864cc10c
    us-west-1:
      app: ami-032f4192931a1c23f
      mpapp: ami-08f54ac5ecc1d06a2
      nat: ami-097ad469381034fa2
    us-west-2:
      app: ami-0cf9d311b117030b7
      mpapp: ami-0cadbaa3ea2314081
      nat: ami-0b840e8a1ce4cdf15
    ca-central-1:
      app: ami-097b8e0d43500bd06
      mpapp: ami-06af9d994f087da1d
      nat: ami-0b32354309da5bba5
    eu-central-1:
      app: ami-0ac913959ff30400c
      mpapp: ami-095335b26e0c90e50
      nat: ami-06a5303d47fbd8c60
    eu-west-1:
      app: ami-0633df61713ea6119
      mpapp: ami-0ef993d4852ba2af0
      nat: ami-024107e3e3217a248
    eu-west-2:
      app: ami-00db26c4cdbec93d0
      mpapp: ami-063ff5c69f26e9741
      nat: ami-0ca65a55561666293
    eu-west-3:
      app: ami-0ebeff36b04510220
      mpapp: ami-0c940e189e77ff4c1
      nat: ami-0641e4dfc1427f114
    ap-southeast-1:
      app: ami-01f4049e941146fc9
      mpapp: ami-0052afd32691a33ae
      nat: ami-01514bb1776d5c018
    ap-southeast-2:
      app: ami-09d065be6f29ec7d7
      mpapp: ami-0151db4f4715bf4e8
      nat: ami-062c04ec46aecd204
    ap-south-1:
      app: ami-06b83cb780a5e823d
      mpapp: ami-00d28db51fd7d5221
      nat: ami-00b3aa8a93dd09c13
    ap-northeast-1:
      app: ami-095e269441d22a46c
      mpapp: ami-0a8a2772fd2a47d2b
      nat: ami-00d29e4cb217ae06b
    ap-northeast-2:
      app: ami-0fa6fff39c74374d4
      mpapp: ami-01b597bf1591b9676
      nat: ami-0d98591cbf9ef1ffd
    sa-east-1:
      app: ami-04f6cf3691a0d28a9
      mpapp: ami-0899953081bebdc04
      nat: ami-057f5d52ff7ae75ae
    eu-north-1:
      app: ami-00ee487a093fa4fa5
      mpapp: ami-0b12307dbcbaf7da6
      nat: ami-28d15f56
    ap-east-1:
      app: ami-08af4a57142aec602
      mpapp: ami-01901a73a22b53a96
      nat: ami-0c6ed192398e5636d
    me-south-1:
      app: ami-0972910afef7e8402
      mpapp: ami-04de93c7f1c75f57d
      nat: ami-0e9909371b18e2ec7
    af-south-1:
      app: ami-0aa5333d54d32b817
      mpapp: ami-08806b5a836d14831
      nat: ami-0f7b1b7c2c50e3202
    eu-south-1:
      app: ami-0f13f20b4aedf40e5
      mpapp: ami-02ebc44cb1930489c
      nat: ami-08df23351dd5626cf

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, "aws-quickstart"]
  IsHighAvailability: !Equals [!Ref DeploymentOption, "High Availability"]
  CreateVPC: !Equals [!Ref UserSpecifiedVPCId, ""]
  IsMarketplacePurchase: !Equals [!Ref MarketplacePurchase, "true"]

Resources: 
  EtleapVPCStack:
    Type: "AWS::CloudFormation::Stack"
    Condition: CreateVPC
    Properties:
      Parameters:
        VpcCidrBlock1:
          Ref: VpcCidrBlock1
        VpcCidrBlock2:
          Ref: VpcCidrBlock2
        NatAMI: !FindInMap [RegionMap, !Ref "AWS::Region", "nat"]
      TemplateURL: 
        !Sub
          - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/vpc.yaml"
          - S3Region: !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub "${QSS3BucketName}-${AWS::Region}", !Ref QSS3BucketName]

  EtleapInternalSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Etleap Internal Security Group"
      GroupName: "Etleap Internal"
      VpcId: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.VpcId, !Ref UserSpecifiedVPCId]
      Tags:
      - Key: Name
        Value: "Etleap Internal"
    
  EtleapInternalEgressSecurityGroup:
    Type: "AWS::EC2::SecurityGroupEgress"
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: String
      FromPort: 0
      ToPort: 65535
      GroupId: !Ref EtleapInternalSecurityGroup
      IpProtocol: tcp

  EtleapInternalInternalIngressSecurityGroup:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      FromPort: 0
      ToPort: 65535
      GroupId: !Ref EtleapInternalSecurityGroup
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref EtleapInternalSecurityGroup  

  EtleapDBStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        VpcId: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.VpcId, !Ref UserSpecifiedVPCId]
        SubnetA: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.PrivateSubnetA, !Ref PrivateSubnetA]
        SubnetB: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.PrivateSubnetB , !Ref PrivateSubnetB]
        DeploymentOption: !Ref DeploymentOption
      TemplateURL: 
        !Sub
          - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/rds.yaml"
          - S3Region: !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub "${QSS3BucketName}-${AWS::Region}", !Ref QSS3BucketName]

  EtleapIAMStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        DeploymentId: !Ref DeploymentId
      TemplateURL:
        !Sub
          - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/iam.yaml"
          - S3Region: !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub "${QSS3BucketName}-${AWS::Region}", !Ref QSS3BucketName]

  EtleapKMSStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        EtleapAppRole: !GetAtt EtleapIAMStack.Outputs.EtleapAppRole
      TemplateURL: 
        !Sub
          - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/kms.yaml"
          - S3Region: !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub "${QSS3BucketName}-${AWS::Region}", !Ref QSS3BucketName]
  
  EtleapAPPStack:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: EtleapDBStack
    Properties:
      Parameters:
        KeyPairName: !Ref KeyPairName
        VpcId: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.VpcId, !Ref UserSpecifiedVPCId]
        DeploymentId: !Ref DeploymentId
        UserSpecifiedDeploymentSecret: !Ref UserSpecifiedDeploymentSecret
        SubnetAId: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.PublicSubnetA, !Ref PublicSubnetA]
        SubnetBId: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.PublicSubnetB, !Ref PublicSubnetB]
        ImageId: !If [IsMarketplacePurchase, !FindInMap [RegionMap, !Ref "AWS::Region", "mpapp"], !FindInMap [RegionMap, !Ref "AWS::Region", "app"]]
        EtleapAppRole: !GetAtt EtleapIAMStack.Outputs.EtleapAppRole
        FirstName: !Ref FirstName
        LastName: !Ref LastName
        Email: !Ref Email
        SetupPassword: !Ref SetupPassword
        KMSKey: !GetAtt EtleapKMSStack.Outputs.KMSKey
        EtleapDBSecurityGroup: !GetAtt EtleapDBStack.Outputs.EtleapDBSecurityGroup
        EtleapDBRootPassword: !GetAtt EtleapDBStack.Outputs.EtleapDBRootPassword
        EtleapInternalSecurityGroup: !Ref EtleapInternalSecurityGroup
        AllowedIPCidr: !Ref AllowedIPCidr
        DeploymentOption: !Ref DeploymentOption
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        EMRHostname: !GetAtt EtleapEMRStack.Outputs.EMRHostname
        RDSHostname: !GetAtt EtleapDBStack.Outputs.Endpoint
        MarketplacePurchase: !Ref MarketplacePurchase
      TemplateURL:
        !Sub
          - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/app.yaml"
          - S3Region: !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub "${QSS3BucketName}-${AWS::Region}", !Ref QSS3BucketName]
  
  EtleapEMRStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        EtleapEMRInstanceProfile: !GetAtt EtleapIAMStack.Outputs.EtleapEMRInstanceProfile
        EtleapEMRDefaultRole: !GetAtt EtleapIAMStack.Outputs.EtleapEMRDefaultRole
        EtleapEMRAutoscalingDefaultRole: !GetAtt EtleapIAMStack.Outputs.EtleapEMRAutoscalingDefaultRole
        EtleapEMRSubnetId: !If [CreateVPC, !GetAtt EtleapVPCStack.Outputs.PublicSubnetB, !Ref PublicSubnetB]
        EtleapInternalSecurityGroup: !Ref EtleapInternalSecurityGroup
      TemplateURL:
        !Sub
          - "https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/emr.yaml"
          - S3Region: !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub "${QSS3BucketName}-${AWS::Region}", !Ref QSS3BucketName]

Outputs:
  EtleapUrl:
    Value: !Sub
     - "https://${EtleapHostname}/"
     - EtleapHostname: !GetAtt EtleapAPPStack.Outputs.Hostname
  EtleapLoginEmail:
    Value: !Ref Email
  EtleapSetupPassword:
    Value: !Ref SetupPassword
  DeploymentSecret:
    Value: !GetAtt EtleapAPPStack.Outputs.DeploymentSecret